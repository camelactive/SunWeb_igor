const baseUrl = "https://raw.githubusercontent.com/camelactive/SunWeb_igor/master/assets/assets.json";
fetch(baseUrl)
    .then(response => response.json())
    .then(data => {
        setNavLinks(data);
        return data
    });

function setNavLinks(data) {
    let navBlock = document.querySelector('.header__nav_top');
    if (navBlock) {
        Object.entries(data).forEach(item => {
            if (item[1].status == true) {
                let navElenet = `<span class="header__middle_container_item"> <a href="">${item[1].name}</a></span>`;
                navBlock.innerHTML += navElenet;
            }
        });
    }
}

let btnMenu = document.querySelector(".btn_menu");
let gridSection = document.querySelectorAll(".menu");
let neonSection = document.querySelectorAll(".neon");
let sliderSection = document.querySelector(".slider");
let menuImg = document.querySelector(".menu_img");
let crossImg = document.querySelector(".cross_img");
let headerTop = document.querySelector(".header__top");
let shimishimi = document.querySelector(".shimishimi");
let shimishimiGreen = document.querySelector(".shimishimi_green");
let adressAdd = document.querySelector(".adress_add");
let shimmingi = document.querySelector(".shimmingi");
let shoppingBag = document.querySelector(".shopping_bag");
let shoppingBagGreen = document.querySelector(".shopping_bag_green");
let summ = document.querySelector(".summ");
let headerNavTop = document.querySelector(".header__nav_top");
document.querySelector(".footer");
let footerInfo = document.querySelector(".footer__info");
let headerTopLeftHide = document.querySelector(".header__top_left_hide");
let headerTopLeftHideGreen = document.querySelector(".header__top_left_hide_green");
let header = document.querySelector(".header");




btnMenu.addEventListener("click", BurgerMenu);
function BurgerMenu() {
    gridSection.forEach(element => {
        element.classList.toggle("burger_menu_hide");
    });
    neonSection.forEach(element => {
        element.classList.toggle("burger_menu_hide");
    });
    sliderSection.classList.toggle("burger_menu_hide");
    headerTop.classList.toggle("header__top_click");

    menuImg.classList.toggle("burger_menu_hide");
    crossImg.classList.toggle("burger_menu_hide");

    shimishimi.classList.toggle("burger_menu_hide");
    shimishimiGreen.classList.toggle("burger_menu_hide");

    adressAdd.classList.toggle("adress_add_green");

    shimmingi.classList.toggle("shimmingi_green");

    shoppingBag.classList.toggle("burger_menu_hide");
    shoppingBagGreen.classList.toggle("burger_menu_hide");
    summ.classList.toggle("summ_green");

    headerNavTop.classList.toggle("header_nav_top_burger");

    let headerNavTopTitle = document.querySelector(".header__nav_top_title");

    headerNavTopTitle.classList.toggle("header__nav_top_title_hide");
    let footerMenu = document.querySelector(".footer");
    footerMenu.classList.toggle("footer__hide");


    footerInfo.classList.toggle("burger_menu_hide");
    let footerBottom = document.querySelector(".footer__bottom");
    footerBottom.classList.toggle("footer__hide");


    headerTopLeftHide.classList.toggle("header__top_left_hide_green");
    headerTopLeftHideGreen.classList.toggle("header__top_left_hide_green");

    header.classList.toggle("box_shadow_none");
    let headerTopRightBurger = document.querySelector(".header__top_right");
    headerTopRightBurger.classList.toggle("header__top_right_burger");


    let headerMiddleContainerItem = document.querySelectorAll(".header__middle_container_item");
    headerMiddleContainerItem.forEach(element => {
        element.classList.toggle("header__middle_container_item_burger");
    });
    let bellRound = document.querySelector(".bell_round");
    bellRound.classList.toggle("bell_round_burger");

    let headerTopLeftMenu = document.querySelector(".header__top_left_menu");
    headerTopLeftMenu.classList.toggle("header__top_left_menu_burger");


    let headerNavTopTitleBurger = document.querySelector(".js-header__nav_top_title");
    headerNavTopTitleBurger.addEventListener("click", menuClick);
    let footerBurger = document.querySelector(".footer__burger");


    function menuClick() {
        if (window.screen.width <= 575) {
            footerBurger.classList.toggle("footer__burger_menu_click");
            headerNavTopTitle.classList.toggle("header__nav_top_title_click");
            headerNavTopTitle.classList.toggle("menu_color");
            let headerNavTopBurger = document.querySelector(".header_nav_top_burger");
             headerNavTopBurger.style.width = "460px";
            let headerMiddleContainerItemBurger = document.querySelectorAll(".header__middle_container_item_burger");
            headerMiddleContainerItemBurger.forEach(e => e.classList.toggle("header__middle_container_item_click"));
        }
    }



}

var products$1 = products = [{
    id: 1,
    name: "susi octopus",
    weight: "850г",
    count: "5шт",
    price: 1500,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"', 
    category: "rolls-classic"

},
{
    id: 2,
    name: "susi fish",
    weight: "950г",
    count: "10шт",
    price: 1800,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "rolls-classic"
}, {
    id: 3,
    name: "susi beef",
    weight: "1000г",
    count: "8шт",
    price: 1200,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "rolls-classic"
}, {
    id: 4,
    name: "susi vegan",
    weight: "750г",
    count: "1шт",
    price: 1000,
    oldprice: 10000000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "rolls-classic"
},
{
    id: 5,
    name: "susi octopus",
    weight: "850г",
    count: "5шт",
    price: 1500,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "rolls-classic"
},
{
    id: 6,
    name: "susi fish",
    weight: "950г",
    count: "10шт",
    price: 1800,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "rolls-classic"
}, {
    id: 7,
    name: "susi beef",
    weight: "1000г",
    count: "8шт",
    price: 1200,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "rolls-classic"
}, {
    id: 8,
    name: "susi vegan",
    weight: "750г",
    count: "1шт",
    price: 1000,
    oldprice: 10000000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "rolls-classic"
}, {
    id: 9,
    name: "susi octopus",
    weight: "850г",
    count: "5шт",
    price: 1500,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "rolls-opal"
},
{
    id: 10,
    name: "susi fish",
    weight: "950г",
    count: "10шт",
    price: 1800,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "rolls-opal"
}, {
    id: 11,
    name: "susi beef",
    weight: "1000г",
    count: "8шт",
    price: 1200,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "rolls-opal"
}, {
    id: 12,
    name: "susi vegan",
    weight: "750г",
    count: "1шт",
    price: 1000,
    oldprice: 10000000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "rolls-opal"
},
{
    id: 13,
    name: "susi octopus",
    weight: "850г",
    count: "5шт",
    price: 1500,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "rolls-opal"
},
{
    id: 14,
    name: "susi fish",
    weight: "950г",
    count: "10шт",
    price: 1800,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "rolls-opal"
}, {
    id: 15,
    name: "susi beef",
    weight: "1000г",
    count: "8шт",
    price: 1200,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "rolls-opal"
}, {
    id: 16,
    name: "susi vegan",
    weight: "750г",
    count: "1шт",
    price: 1000,
    oldprice: 10000000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "rolls-opal"
},
{
    id: 17,
    name: "susi octopus",
    weight: "850г",
    count: "5шт",
    price: 1500,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "susi-classic"
},
{
    id: 18,
    name: "susi fish",
    weight: "950г",
    count: "10шт",
    price: 1800,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "susi-classic"
}, {
    id: 19,
    name: "susi beef",
    weight: "1000г",
    count: "8шт",
    price: 1200,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "susi-classic"
}, {
    id: 20,
    name: "susi vegan",
    weight: "750г",
    count: "1шт",
    price: 1000,
    oldprice: 10000000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "susi-classic"
},
{
    id: 21,
    name: "susi octopus",
    weight: "850г",
    count: "5шт",
    price: 1500,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "susi-classic"
},
{
    id: 22,
    name: "susi fish",
    weight: "950г",
    count: "10шт",
    price: 1800,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "susi-classic"
}, {
    id: 23,
    name: "susi beef",
    weight: "1000г",
    count: "8шт",
    price: 1200,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "susi-classic"
}, {
    id: 24,
    name: "susi vegan",
    weight: "750г",
    count: "1шт",
    price: 1000,
    oldprice: 10000000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "susi-classic"
},
{
    id: 25,
    name: "susi octopus",
    weight: "850г",
    count: "5шт",
    price: 1500,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "susi-opal"
},
{
    id: 26,
    name: "susi fish",
    weight: "950г",
    count: "10шт",
    price: 1800,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "susi-opal"
}, {
    id: 27,
    name: "susi beef",
    weight: "1000г",
    count: "8шт",
    price: 1200,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "susi-opal"
}, {
    id: 28,
    name: "susi vegan",
    weight: "750г",
    count: "1шт",
    price: 1000,
    oldprice: 10000000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "susi-opal"
},
{
    id: 29,
    name: "susi octopus",
    weight: "850г",
    count: "5шт",
    price: 1500,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "susi-opal"
},
{
    id: 30,
    name: "susi fish",
    weight: "950г",
    count: "10шт",
    price: 1800,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "susi-opal"
}, {
    id: 31,
    name: "susi beef",
    weight: "1000г",
    count: "8шт",
    price: 1200,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "susi-opal"
}, {
    id: 32,
    name: "susi vegan",
    weight: "750г",
    count: "1шт",
    price: 1000,
    oldprice: 10000000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "susi-opal"
},
{
    id: 33,
    name: "susi octopus",
    weight: "850г",
    count: "5шт",
    price: 1500,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "bokeAndBule-classic"
},
{
    id: 34,
    name: "susi fish",
    weight: "950г",
    count: "10шт",
    price: 1800,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "bokeAndBule-classic"
}, {
    id: 35,
    name: "susi beef",
    weight: "1000г",
    count: "8шт",
    price: 1200,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "bokeAndBule-classic"
}, {
    id: 36,
    name: "susi vegan",
    weight: "750г",
    count: "1шт",
    price: 1000,
    oldprice: 10000000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "bokeAndBule-classic"
},
{
    id: 37,
    name: "susi octopus",
    weight: "850г",
    count: "5шт",
    price: 1500,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "bokeAndBule-classic"
},
{
    id: 38,
    name: "susi fish",
    weight: "950г",
    count: "10шт",
    price: 1800,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "bokeAndBule-classic"
}, {
    id: 39,
    name: "susi beef",
    weight: "1000г",
    count: "8шт",
    price: 1200,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "bokeAndBule-classic"
}, {
    id: 40,
    name: "susi vegan",
    weight: "750г",
    count: "1шт",
    price: 1000,
    oldprice: 10000000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "bokeAndBule-classic"
},
{
    id: 41,
    name: "susi octopus",
    weight: "850г",
    count: "5шт",
    price: 1500,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "bokeAndBule-opal"
},
{
    id: 42,
    name: "susi fish",
    weight: "950г",
    count: "10шт",
    price: 1800,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "bokeAndBule-opal"
}, {
    id: 43,
    name: "susi beef",
    weight: "1000г",
    count: "8шт",
    price: 1200,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "bokeAndBule-opal"
}, {
    id: 44,
    name: "susi vegan",
    weight: "750г",
    count: "1шт",
    price: 1000,
    oldprice: 10000000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "bokeAndBule-opal"
},
{
    id: 45,
    name: "susi octopus",
    weight: "850г",
    count: "5шт",
    price: 1500,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "bokeAndBule-opal"
},
{
    id: 46,
    name: "susi fish",
    weight: "950г",
    count: "10шт",
    price: 1800,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "bokeAndBule-opal"
}, {
    id: 47,
    name: "susi beef",
    weight: "1000г",
    count: "8шт",
    price: 1200,
    oldprice: 10000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "bokeAndBule-opal"
}, {
    id: 48,
    name: "susi vegan",
    weight: "750г",
    count: "1шт",
    price: 1000,
    oldprice: 10000000,
    image: 'src="./src/images/frame-true.svg"'
    , category: "bokeAndBule-opal"
}

];

let menuGridRollsClassic = document.querySelector(".js-products_rolls_classic");
let menuGridRollsOpal = document.querySelector(".js-products_rolls_opal");
let menuGridSusiClassic = document.querySelector(".js-products_susi_classic");
let menuGridSusiOpal = document.querySelector(".js-products_susi_opal");
let menuGridPokeAndBuleClassic = document.querySelector(".js-products_pokeandbule_classic");
let menuGridPokeAndBuleOpal = document.querySelector(".js-products_pokeandbule_opal");
let placeToRander = "";
products$1.forEach(function productsRender(product) {
    if (product.category =="rolls-classic"){
        placeToRander = menuGridRollsClassic;
    }
    else if (product.category =="rolls-opal"){
        placeToRander = menuGridRollsOpal;
    }
    else if (product.category =="susi-classic"){
        placeToRander = menuGridSusiClassic;
    }
    else if (product.category =="susi-opal"){ 
        placeToRander = menuGridSusiOpal;
    }
    else if (product.category =="bokeAndBule-classic"){ 
        placeToRander = menuGridPokeAndBuleClassic;
      }
    else if (product.category =="bokeAndBule-opal"){ 
        placeToRander = menuGridPokeAndBuleOpal;
     }
     placeToRander.innerHTML += `
     <div class="grid_card">
     <div class="grid_card_images">
         <div class="grid_card_menu">
             <a href="#">
                 <div class="grid_card_menu_img papper"><img src="./src/images/paper.svg" alt="">
                 </div>
             </a>
             <a href="#">
                 <div class="grid_card_menu_img hot"><img src="./src/images/hot.svg" alt=""></div>
             </a>
             <a href="#">
                 <div class="grid_card_menu_img green"><img src="./src/images/green.svg" alt="">
                 </div>
             </a>
         </div>
         <div class="grid_card_image"><img ${product.image} alt="susiPicture"></div>
     </div>
     <div class="grid_card_info">
         <div class="grid_card_text">
             <div class="grid_card_header">${product.name}</div>
             <div class="grid_card_weight">${product.count}/${product.weight}</div>
         </div>
         <div class="grid_card_price">
             <div class="grid_card_oldprice">${product.oldprice}</div>
             <div class="grid_card_newprice" product_id="${product.id}">${product.price}</div>
         </div>
     </div>
     </div>`;
});

let slider = document.querySelector(".js-slider");

let sliderImages = [{
        id: 1,
        image: 'src="./src/images/slider-image1.png"'
    },
    {
        id: 2,
        image: 'src="./src/images/slider-image1.png"'
    },
    {
        id: 3,
        image: 'src="./src/images/slider-image1.png"'
    }, {
        id: 4,
        image: 'src="./src/images/slider-image1.png"'
    }, {
        id: 5,
        image: 'src="./src/images/slider-image1.png"'
    }, {
        id: 6,
        image: 'src="./src/images/slider-image1.png"'
    }, {
        id: 7,
        image: 'src="./src/images/slider-image2.png"'
    }, {
        id: 8,
        image: 'src="./src/images/slider-image3.png"'
    }, {
        id: 6,
        image: 'src="./src/images/slider-image1.png"'
    }, {
        id: 7,
        image: 'src="./src/images/slider-image2.png"'
    }, {
        id: 8,
        image: 'src="./src/images/slider-image3.png"'
    },
];

function sliderContent() {
    for (let i = 0; i < sliderImages.length; i++) {
        slider.innerHTML += `  
        <div class="slider__item"><img ${sliderImages[i].image}"></div>
       `;
    }

}
sliderContent();

startBasket();
startSumm();
ShopingBagRender();
let ShopingBagClearButton = document.querySelectorAll(".js-clear-button");
basket = {
        quantity: 0,
        summ: 0,
        products: [],
        add(productId) {
            let existProduct = this.products.find(item => item.id == productId);
            let quantityProduct = JSON.parse(localStorage.getItem(`"products${productId}"`));

            if (!existProduct) {
                this.products.push({
                    id: productId,
                    quantity: quantityProduct ? quantityProduct.quantity + 1 : 1,
                });
            } else {
                existProduct.quantity++;
            }
            this._calculateQuantity();
            // this._calculateSumm();
            this._addInLocalStorage();
            startBasket();
            startSumm();
            ShopingBagRenderClear();
            ShopingBagRender();

        },
        _calculateQuantity() {
            this.quantity = 0;
            this.products.forEach(product => {
                    this.quantity += product.quantity;
                });
                // document.querySelector('.js-bell_round-count').innerHTML = this.quantity;

        },
        _calculateSumm() {

            totalSumm = 0;
            summProduct = 0;
            this.summ = 0;
            this.products.forEach(product => {
                let databaseProduct = products$1.find(item => product.id == item.id);
                if (databaseProduct) {
                    quantityProduct = JSON.parse(localStorage.getItem(`"products${product.id}"`)) ? JSON.parse(localStorage.getItem(`"products${product.id}"`)).quantity + 1 : 1;
                    summProduct = quantityProduct * parseFloat(databaseProduct.price);
                    this.summ += parseInt(product.quantity) * parseFloat(databaseProduct.price);
                    totalSumm += summProduct;
                }
            });
            document.querySelector(".js-summ").innerHTML = totalSumm;

        },


        //////////////////////////Добавление в локал сторэдж//////////////////////////
        _addInLocalStorage() {
            this.products.forEach(product => {
                localStorage.setItem(`"products${product.id}"`, JSON.stringify(product));
            });
        },

    };
    //////////////////////////Добавление в локал сторэдж//////////////////////////


document.querySelectorAll('.grid_card_newprice').forEach(item => {
    item.addEventListener('click', function(e) {
        basket.add(e.target.getAttribute('product_id'));
    });
});
// Общее колличество товаров
function startBasket() {
    let totalQuantity = 0;
    for (let id = 1; id <= products$1.length; id++) {
        if (JSON.parse(localStorage.getItem(`"products${id}"`))) {
            totalQuantity += JSON.parse(localStorage.getItem(`"products${id}"`)).quantity;
        }
    }
    document.querySelector('.js-bell_round-count').innerHTML = totalQuantity;
}
function startSumm() {
    totalSumm = 0;
    for (let id = 1; id <= products$1.length; id++) {
        quantityProduct = JSON.parse(localStorage.getItem(`"products${id}"`)) ? JSON.parse(localStorage.getItem(`"products${id}"`)).quantity : 0;
        if (quantityProduct != 0) {
            let existProduct = products$1.find(item => item.id == id);
            let summProduct = 0;
            summProduct += existProduct.price * quantityProduct;
            totalSumm += summProduct;
        }
    }
    document.querySelector(".js-summ").innerHTML = totalSumm;
}
//   RENDER
let shoppingBagAndRound = document.querySelector(".shopping_bag_and_round");
let shoppingBagClickList = document.querySelector(".js-shopping_bag_click");
let shoppingBagClickHide = document.querySelector(".shopping_bag_click_hide");
shoppingBagAndRound.addEventListener("click", ShoppingBagClick);

function ShoppingBagClick(event) {
    if (event.target.type != "button") {
        shoppingBagClickHide.classList.toggle("shopping_bag_click_hide");
    }
}
function ShopingBagRender() {
    let shoppingBagClickList = document.querySelector(".js-shopping_bag_click");
    for (let id = 1; id <= products$1.length; id++) {
        quantityProduct = JSON.parse(localStorage.getItem(`"products${id}"`)) ? JSON.parse(localStorage.getItem(`"products${id}"`)).quantity : 0;
        if (quantityProduct != 0) {
            let existProduct = products$1.find(item => item.id == id);
            let nameProduct = existProduct.name;
            let idProduct = existProduct.id;
            let summProduct = 0;
            summProduct += existProduct.price * quantityProduct;
            let clearButton = `<button type = button class ="clear_button js-clear-button" data-id ="${idProduct}">clear</button>`;
            shoppingBagClickList.innerHTML += `<div>${nameProduct} ${quantityProduct}-shtuk ${summProduct}-rubles ${clearButton}</div>`;
        }
    }
}
function ShopingBagRenderClear() {
    shoppingBagClickList.innerHTML = ``;
}

function ProductClear(event) {
    let clearProduct = "";
    for (let id = 1; id <= products$1.length; id++) {
        clearProduct = JSON.parse(localStorage.getItem(`"products${id}"`));
        if (clearProduct) {
            localStorage.removeItem(`"products${event.target.dataset.id}"`);
            console.log(event.target.dataset.id);
            ShopingBagRenderClear();
            ShopingBagRender();
            // console.log(`"products${id}"`);

        }
    }

}

// let ShopingBagClearButton = document.querySelectorAll(".js-clear-button");
ShopingBagClearButton.forEach(ClearButton => {
    ClearButton.addEventListener("click", ProductClear);
});
